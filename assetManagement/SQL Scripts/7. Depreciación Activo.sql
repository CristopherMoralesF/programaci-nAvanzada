CREATE OR ALTER VIEW AUXILIAR_DEPRECIACION AS
	SELECT
		A.ID_ACTIVO,
		A.DESCRIPCION_ACTIVO,
		A.VALOR_ADQUISICION,
		A.FECHA_ADQUISICION,
		A.PERIODOS_DEPRECIADOS,
		C.DESCRIPCION_CLASE,
		C.VIDA_UTIL,
		A.ID_CLASE,

		---- Calculo de campos
		-- Calculo depreciación acumulada
		CASE WHEN A.PERIODOS_DEPRECIADOS <= (C.VIDA_UTIL * 12) THEN
			ROUND(A.VALOR_ADQUISICION / (C.VIDA_UTIL * 12),2)
		ELSE
			0
		END AS DEPRECIACION_MENSUAL,

		-- Calculo depreciación mensual.
		ROUND((A.VALOR_ADQUISICION / (C.VIDA_UTIL * 12)) * A.PERIODOS_DEPRECIADOS,2) AS DEPRECIACION_ACUMULADA

	FROM ACTIVO A
	INNER JOIN CLASE C ON C.ID_CLASE = A.ID_CLASE
GO

SELECT * FROM AUXILIAR_DEPRECIACION;
GO

CREATE OR ALTER PROCEDURE CORRER_DEPRECIACION
	@IN_ID_CLASE		INT,
	@IN_JE_DESCRIPCION	VARCHAR(225)
AS
	DECLARE
		@VAR_DEPRECIACION_TOTAL		FLOAT,
		@VAR_EXPENSE_ACCOUNT		VARCHAR(15),
		@VAR_DEPRECIATION_ACCOUNT	VARCHAR(15),
		@VAR_CLASS_NAME				VARCHAR(50),
		@VAR_FINAL_DEPRECIATION		FLOAT,
		@VAR_ID_ASIENTO				INT
BEGIN

	-- Completar la información necesaria para crear el asiento de depreciación. 
	SELECT @VAR_DEPRECIACION_TOTAL = SUM(DEPRECIACION_MENSUAL) FROM AUXILIAR_DEPRECIACION WHERE ID_CLASE = @IN_ID_CLASE;
	SELECT @VAR_EXPENSE_ACCOUNT = ID_CUENTA FROM CLASE_CUENTA WHERE ID_CLASE = @IN_ID_CLASE AND ID_CATEGORIA_CUENTA = 5;
	SELECT @VAR_DEPRECIATION_ACCOUNT = ID_CUENTA FROM CLASE_CUENTA WHERE ID_CLASE = @IN_ID_CLASE AND ID_CATEGORIA_CUENTA = 6;
	SELECT @VAR_CLASS_NAME = DESCRIPCION_CLASE FROM CLASE WHERE ID_CLASE = @IN_ID_CLASE;

	-- Crear asiento
	INSERT INTO ASIENTO (ID_CLASE,FECHA,DESCRIPCION) VALUES (@IN_ID_CLASE,GETDATE(),@IN_JE_DESCRIPCION);
	SET @VAR_ID_ASIENTO = @@IDENTITY;

	-- Crear body del asiento
	INSERT INTO ASIENTO_LINEA (ID_ASIENTO,ID_CUENTA_CONTABLE,DESCRIPCION_LINEA,DEBITO,CREDITO) VALUES (@VAR_ID_ASIENTO,@VAR_EXPENSE_ACCOUNT,@IN_JE_DESCRIPCION,@VAR_DEPRECIACION_TOTAL,0);
	INSERT INTO ASIENTO_LINEA (ID_ASIENTO,ID_CUENTA_CONTABLE,DESCRIPCION_LINEA,DEBITO,CREDITO) VALUES (@VAR_ID_ASIENTO,@VAR_DEPRECIATION_ACCOUNT,@IN_JE_DESCRIPCION,0,@VAR_DEPRECIACION_TOTAL);

	---- Actualizar los balances de las cuentas impactadas
	-- Cuenta de debito
	UPDATE CUENTA_CONTABLE SET TOTAL_DEBITOS = TOTAL_DEBITOS + @VAR_DEPRECIACION_TOTAL WHERE ID_CUENTA = @VAR_EXPENSE_ACCOUNT;
	UPDATE CUENTA_CONTABLE SET BALANCE = TOTAL_DEBITOS - TOTAL_CREDITOS WHERE ID_CUENTA = @VAR_EXPENSE_ACCOUNT; 

	-- Cuenta de credito
	UPDATE CUENTA_CONTABLE SET TOTAL_CREDITOS = TOTAL_CREDITOS + @VAR_DEPRECIACION_TOTAL WHERE ID_CUENTA = @VAR_DEPRECIATION_ACCOUNT;
	UPDATE CUENTA_CONTABLE SET BALANCE = TOTAL_DEBITOS - TOTAL_CREDITOS WHERE ID_CUENTA = @VAR_DEPRECIATION_ACCOUNT;

	-- Actualizar periodos depreciados de los activos. 
	UPDATE ACTIVO SET PERIODOS_DEPRECIADOS = PERIODOS_DEPRECIADOS + 1 WHERE ID_CLASE = @IN_ID_CLASE;

	-- Generar auxiliar de activos con los activos que fueron impactados por la depreciación
	SELECT * FROM AUXILIAR_DEPRECIACION WHERE ID_CLASE = @IN_ID_CLASE

END;


SELECT * FROM AUXILIAR_DEPRECIACION;

EXEC CORRER_DEPRECIACION 1,'Depreciacion Enero 2023'
GO

SELECT SUM(DEPRECIACION_MENSUAL) AS DEPRECIACION_TOTAL_CLASE FROM AUXILIAR_DEPRECIACION WHERE ID_CLASE = 1;

SELECT * FROM ASIENTO

SELECT * FROM ASIENTO_LINEA WHERE ID_ASIENTO = 3;
